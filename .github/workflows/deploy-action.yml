name: 'Deploy App Workflow'
on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      branch:
        required: true
        type: string
    secrets:
      app_env:
        required: true
      vercel_token:
        required: true
      org_id:
        required: true
      project_id:
        required: true

jobs:
  deploy-app:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    concurrency:
      cancel-in-progress: true
      group: ${{ inputs.environment }}
    env:
      VERCEL_ORG_ID: ${{ secrets.org_id }}
      VERCEL_PROJECT_ID: ${{ secrets.project_id }}
    steps:
      - name: Checkout ${{ inputs.branch }} branch
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.branch }}

      - uses: pnpm/action-setup@v2.0.1
        with:
          version: 7.0.1

      - uses: actions/setup-node@v2
        with:
          node-version: 16.15.0
          cache: 'pnpm'

      - name: Set node environment variables
        run: echo ${{ secrets.app_env }} | openssl base64 -d -A -out .env

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Install Vercel CLI
        run: pnpm add vercel@latest

      - name: Build and deploy project to Vercel in Production
        if: ${{ inputs.environment == 'production' }}
        run: |
          vercel pull --yes --environment=production --token=${{ secrets.vercel_token }}
          vercel build --prod --token=${{ secrets.vercel_token }}
          vercel deploy --prebuilt --prod --token=${{ secrets.vercel_token }} -m githubCommitRef=${{ inputs.branch }}

      - name: Build and deploy project to Vercel in Develop
        if: ${{ inputs.environment == 'dev' }}
        run: |
          vercel pull --yes --token=${{ secrets.vercel_token }}
          vercel build --token=${{ secrets.vercel_token }}
          vercel deploy --prebuilt --token=${{ secrets.vercel_token }} -m githubCommitRef=${{ inputs.branch }}

      - name: Build and deploy project to Vercel in Preview
        if: |
          inputs.environment != 'production' && inputs.environment != 'dev'
        run: |
          vercel pull --yes --environment=preview --token=${{ secrets.vercel_token }}
          vercel build --token=${{ secrets.vercel_token }}
          vercel deploy --prebuilt --token=${{ secrets.vercel_token }} -m githubCommitRef=${{ inputs.branch }}
