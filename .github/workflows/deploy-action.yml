name: 'Deploy App Workflow'
on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      branch:
        required: true
        type: string
    secrets:
      app_env:
        required: true
      vercel_token:
        required: true
      org_id:
        required: true
      project_id:
        required: true

jobs:
  deploy-app:
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.environment }}
      url: ${{ steps.get_url.outputs.vercel_url }}
    concurrency:
      cancel-in-progress: true
      group: ${{ inputs.environment }}
    env:
      VERCEL_ORG_ID: ${{ secrets.org_id }}
      VERCEL_PROJECT_ID: ${{ secrets.project_id }}
    steps:
      - name: Checkout ${{ inputs.branch }} branch
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.branch }}

      - uses: pnpm/action-setup@v2.0.1
        with:
          version: 7.0.1

      - uses: actions/setup-node@v2
        with:
          node-version: 16.15.0
          cache: 'pnpm'

      - name: Set node environment variables
        run: echo ${{ secrets.app_env }} | openssl base64 -d -A -out .env

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Install Vercel CLI
        run: pnpm add vercel@latest

      - name: Vercel Build
        run: |
          environment=""
          prodRun=""

          if [[ "${{ inputs.environment }}" == "production" ]]
          then
            environment="--environment=production"
            prodRun="--prod"
          elif [[ "${{ contains(inputs.branch, 'develop') }}" == "false" ]]
          then
            environment="--environment=preview"
          fi

          echo environment: $environment
          echo prodRun: $prodRun

          vercel pull --yes $environment --token=${{ secrets.vercel_token }}
          vercel build $prodRun --token=${{ secrets.vercel_token }}
        # vercel deploy --prebuilt $prodRun --token=${{ secrets.vercel_token }}

      - uses: amondnet/vercel-action@v20
        name: Deploy to Vercel
        id: vercel_deploy
        with:
          vercel-token: ${{ secrets.vercel_token }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-args: "deploy --prebuilt ${{ inputs.environment == 'production' && '--prod' || '' }}"
          vercel-org-id: ${{ secrets.org_id}}
          vercel-project-id: ${{ secrets.project_id}}
          working-directory: ./
          # set develop vercel url alias in develop branch only
          alias-domains: "${{ contains(inputs.branch, 'develop') && 'develop-t3-stack-app.vercel.app' || '' }}"

      - name: Set Vercel Deployment URL
        id: get_url
        run: |
          vercel_url=""

          # deploy to production
          if [[ "${{ inputs.environment }}" == 'production' ]]
          then
            vercel_url="https://t3-stack-app.vercel.app"

          # deploy as preview or dev
          else
            vercel_url="${{ steps.vercel_deploy.outputs.preview-url }}"
          fi

          echo vercel url: $vercel_url
          echo "::set-output name=vercel_url::${vercel_url}"
